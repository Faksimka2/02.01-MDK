1.Проверяем наличие дисков (с фильтрацией и без) 
u04@u04-VirtualBox:~$ sudo fdisk -l
Диск /dev/loop0: 4 KiB, 4096 байт, 8 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop1: 241,95 MiB, 253698048 байт, 495504 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop2: 63,75 MiB, 66850816 байт, 130568 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop4: 73,89 MiB, 77475840 байт, 151320 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop6: 242 MiB, 253751296 байт, 495608 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop7: 349,7 MiB, 366682112 байт, 716176 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/sda: 25 GiB, 26843545600 байт, 52428800 секторов
Disk model: VBOX HARDDISK   
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт
Тип метки диска: gpt
Идентификатор диска: F3E70E10-9F58-4354-A1D1-1D8CBC34FB89

Устр-во     начало    Конец  Секторы Размер Тип
/dev/sda1     2048     4095     2048     1M BIOS boot
/dev/sda2     4096  1054719  1050624   513M EFI
/dev/sda3  1054720 52426751 51372032  24,5G Файловая система Linux


Диск /dev/sdb: 6,65 GiB, 7143669760 байт, 13952480 секторов
Disk model: VBOX HARDDISK   
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/sdc: 6,65 GiB, 7143669760 байт, 13952480 секторов
Disk model: VBOX HARDDISK   
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop8: 485,52 MiB, 509100032 байт, 994336 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop9: 516,01 MiB, 541073408 байт, 1056784 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop10: 91,69 MiB, 96141312 байт, 187776 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop11: 12,2 MiB, 12791808 байт, 24984 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop12: 12,32 MiB, 12922880 байт, 25240 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop13: 44,44 MiB, 46596096 байт, 91008 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop14: 50,89 MiB, 53366784 байт, 104232 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop15: 568 KiB, 581632 байт, 1136 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop16: 452 KiB, 462848 байт, 904 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop17: 73,89 MiB, 77479936 байт, 151328 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт


Диск /dev/loop18: 63,77 MiB, 66867200 байт, 130600 секторов
Единицы: секторов по 1 * 512 = 512 байт
Размер сектора (логический/физический): 512 байт / 512 байт
Размер I/O (минимальный/оптимальный): 512 байт / 512 байт
u04@u04-VirtualBox:~$ sudo fdisk -l |gred sd
Команда «gred» не найдена. Возможно, вы имели в виду:
  команда 'grex' из snap-пакета grex (v1.4.5)
  команда 'mred' из deb-пакета racket (8.2+dfsg1-2ubuntu1)
  команда 'tred' из deb-пакета graphviz (2.42.2-6ubuntu0.1)
  команда 'grep' из deb-пакета grep (3.7-1build1)
  команда 'red' из deb-пакета ed (1.18-1)
  команда 'greed' из deb-пакета greed (4.2-1)
См. 'snap info <имя_snap-пакета>', чтобы просмотреть дополнительные версии.
u04@u04-VirtualBox:~$ sudo fdisk -l |grep sd
Диск /dev/sda: 25 GiB, 26843545600 байт, 52428800 секторов
/dev/sda1     2048     4095     2048     1M BIOS boot
/dev/sda2     4096  1054719  1050624   513M EFI
/dev/sda3  1054720 52426751 51372032  24,5G Файловая система Linux
Диск /dev/sdb: 6,65 GiB, 7143669760 байт, 13952480 секторов
Диск /dev/sdc: 6,65 GiB, 7143669760 байт, 13952480 секторов
2. Создание новых GPT разделов с помощью gdisk (в самом начале были проблемы с сохранением разделов (забыл про "w"))
u04@u04-VirtualBox:~$ sudo gdisk /dev/sdb
GPT fdisk (gdisk) version 1.0.8

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries in memory.

Command (? for help): o
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): y

Command (? for help): o
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): Y

Command (? for help): n       
Partition number (1-128, default 1): 
First sector (34-13952446, default = 2048) or {+-}size{KMGTP}: +2G
Last sector (4196352-13952446, default = 13952446) or {+-}size{KMGTP}: ^C
u04@u04-VirtualBox:~$ sudo gdisk /dev/sdb
GPT fdisk (gdisk) version 1.0.8

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries in memory.

Command (? for help): O
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): Y

Command (? for help): N
Partition number (1-128, default 1): 
First sector (34-13952446, default = 2048) or {+-}size{KMGTP}: 
Last sector (2048-13952446, default = 13952446) or {+-}size{KMGTP}: +2G
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): 
Changed type of partition to 'Linux filesystem'

Command (? for help): n
Partition number (2-128, default 2): 
First sector (34-13952446, default = 4196352) or {+-}size{KMGTP}: 
Last sector (4196352-13952446, default = 13952446) or {+-}size{KMGTP}: 
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): 
Changed type of partition to 'Linux filesystem'

Command (? for help): sudo mkfs.ext4 /dev/sdb1
You may need to edit /etc/fstab and/or your boot loader configuration!

Command (? for help): exit
b	back up GPT data to a file
c	change a partition's name
d	delete a partition
i	show detailed information on a partition
l	list known partition types
n	add a new partition
o	create a new empty GUID partition table (GPT)
p	print the partition table
q	quit without saving changes
r	recovery and transformation options (experts only)
s	sort partitions
t	change a partition's type code
v	verify disk
w	write table to disk and exit
x	extra functionality (experts only)
?	print this menu

Command (? for help): ^C
u04@u04-VirtualBox:~$ sudo mkfs.ext4 /dev/sdb1
mke2fs 1.46.5 (30-Dec-2021)
The file /dev/sdb1 does not exist and no size was specified.
u04@u04-VirtualBox:~$ sudo gdisk /dev/sdb
GPT fdisk (gdisk) version 1.0.8

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries in memory.

Command (? for help): o
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): Y

Command (? for help): N
Partition number (1-128, default 1): 
First sector (34-13952446, default = 2048) or {+-}size{KMGTP}: 
Last sector (2048-13952446, default = 13952446) or {+-}size{KMGTP}: +2G
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): 
Changed type of partition to 'Linux filesystem'

Command (? for help): y
b	back up GPT data to a file
c	change a partition's name
d	delete a partition
i	show detailed information on a partition
l	list known partition types
n	add a new partition
o	create a new empty GUID partition table (GPT)
p	print the partition table
q	quit without saving changes
r	recovery and transformation options (experts only)
s	sort partitions
t	change a partition's type code
v	verify disk
w	write table to disk and exit
x	extra functionality (experts only)
?	print this menu

Command (? for help): n
Partition number (2-128, default 2): 
First sector (34-13952446, default = 4196352) or {+-}size{KMGTP}: 
Last sector (4196352-13952446, default = 13952446) or {+-}size{KMGTP}: 
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): 
Changed type of partition to 'Linux filesystem'

Command (? for help): y
b	back up GPT data to a file
c	change a partition's name
d	delete a partition
i	show detailed information on a partition
l	list known partition types
n	add a new partition
o	create a new empty GUID partition table (GPT)
p	print the partition table
q	quit without saving changes
r	recovery and transformation options (experts only)
s	sort partitions
t	change a partition's type code
v	verify disk
w	write table to disk and exit
x	extra functionality (experts only)
?	print this menu

Command (? for help): ?
b	back up GPT data to a file
c	change a partition's name
d	delete a partition
i	show detailed information on a partition
l	list known partition types
n	add a new partition
o	create a new empty GUID partition table (GPT)
p	print the partition table
q	quit without saving changes
r	recovery and transformation options (experts only)
s	sort partitions
t	change a partition's type code
v	verify disk
w	write table to disk and exit
x	extra functionality (experts only)
?	print this menu

Command (? for help): ^C
u04@u04-VirtualBox:~$ sudo mkfs.ext4 /dev/sdb1
mke2fs 1.46.5 (30-Dec-2021)
The file /dev/sdb1 does not exist and no size was specified.
u04@u04-VirtualBox:~$ sudo gdisk /dev/sdb
GPT fdisk (gdisk) version 1.0.8

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries in memory.

Command (? for help): o
This option deletes all partitions and creates a new protective MBR.
Proceed? (Y/N): y

Command (? for help): n
Partition number (1-128, default 1): 
First sector (34-13952446, default = 2048) or {+-}size{KMGTP}: 
Last sector (2048-13952446, default = 13952446) or {+-}size{KMGTP}: +2G
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): 
Changed type of partition to 'Linux filesystem'

Command (? for help): N
Partition number (2-128, default 2): 
First sector (34-13952446, default = 4196352) or {+-}size{KMGTP}: 
Last sector (4196352-13952446, default = 13952446) or {+-}size{KMGTP}: 
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): 
Changed type of partition to 'Linux filesystem'

Command (? for help): W

Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): Y
OK; writing new GUID partition table (GPT) to /dev/sdb.
The operation has completed successfully.
u04@u04-VirtualBox:~$ ^C
u04@u04-VirtualBox:~$ sudo mkfs.ext4 /dev/sdb1
mke2fs 1.46.5 (30-Dec-2021)
Creating filesystem with 524288 4k blocks and 131072 inodes
Filesystem UUID: 18e55789-1473-478e-8092-dc7c55d259c1
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912

Allocating group tables: done                            
Сохранение таблицы inod'ов: done                            
Создание журнала (16384 блоков): готово
Writing superblocks and filesystem accounting information: готово

u04@u04-VirtualBox:~$ sudo apt install xfsprogs
Чтение списков пакетов… Готово
Построение дерева зависимостей… Готово
Чтение информации о состоянии… Готово         
Следующие пакеты устанавливались автоматически и больше не требуются:
  libwpe-1.0-1 libwpebackend-fdo-1.0-1
Для их удаления используйте «sudo apt autoremove».
Предлагаемые пакеты:
  xfsdump attr quota
Следующие НОВЫЕ пакеты будут установлены:
  xfsprogs
Обновлено 0 пакетов, установлено 1 новых пакетов, для удаления отмечено 0 пакетов, и 96 пакетов не обновлено.
Необходимо скачать 870 kB архивов.
После данной операции объём занятого дискового пространства возрастёт на 2 851 kB.
Пол:1 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 xfsprogs amd64 5.13.0-1ubuntu2.1 [870 kB]
Получено 870 kB за 1с (1 142 kB/s)
Выбор ранее не выбранного пакета xfsprogs.
(Чтение базы данных … на данный момент установлено 181889 файлов и каталогов.)
Подготовка к распаковке …/xfsprogs_5.13.0-1ubuntu2.1_amd64.deb …
Распаковывается xfsprogs (5.13.0-1ubuntu2.1) …
Настраивается пакет xfsprogs (5.13.0-1ubuntu2.1) …
update-initramfs: deferring update (trigger activated)
Обрабатываются триггеры для man-db (2.10.2-1) …
Обрабатываются триггеры для libc-bin (2.35-0ubuntu3.9) …
Обрабатываются триггеры для initramfs-tools (0.140ubuntu13.4) …
update-initramfs: Generating /boot/initrd.img-6.8.0-52-generic
u04@u04-VirtualBox:~$ sudo mkfs.xfs /dev/sdb2
meta-data=/dev/sdb2              isize=512    agcount=4, agsize=304878 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=1, sparse=1, rmapbt=0
         =                       reflink=1    bigtime=0 inobtcount=0
data     =                       bsize=4096   blocks=1219511, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
u04@u04-VirtualBox:~$ sudo mkfs.btrfs /dev/sdc1
btrfs-progs v5.16.2
See http://btrfs.wiki.kernel.org for more information.

Performing full device TRIM /dev/sdc1 (3.00GiB) ...
NOTE: several default settings have changed in version 5.15, please make sure
      this does not affect your deployments:
      - DUP for metadata (-m dup)
      - enabled no-holes (-O no-holes)
      - enabled free-space-tree (-R free-space-tree)

Label:              (null)
UUID:               735a48f0-bc23-4cc6-bbff-3871f648072e
Node size:          16384
Sector size:        4096
Filesystem size:    3.00GiB
Block group profiles:
  Data:             single            8.00MiB
  Metadata:         DUP             256.00MiB
  System:           DUP               8.00MiB
SSD detected:       no
Zoned device:       no
Incompat features:  extref, skinny-metadata, no-holes
Runtime features:   free-space-tree
Checksum:           crc32c
Number of devices:  1
Devices:
   ID        SIZE  PATH
    1     3.00GiB  /dev/sdc1

u04@u04-VirtualBox:~$ sudo mkfs.ext2 /dev/sdc2
mke2fs 1.46.5 (30-Dec-2021)
Creating filesystem with 957367 4k blocks and 239520 inodes
Filesystem UUID: 39b86510-8cf0-4684-bc0b-fa8d4c2be945
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736

Allocating group tables: done                            
Сохранение таблицы inod'ов: done                            
Writing superblocks and filesystem accounting information: готово
3. Проверка
u04@u04-VirtualBox:~$ sudo fdisk -l |grep sd
Диск /dev/sda: 25 GiB, 26843545600 байт, 52428800 секторов
/dev/sda1     2048     4095     2048     1M BIOS boot
/dev/sda2     4096  1054719  1050624   513M EFI
/dev/sda3  1054720 52426751 51372032  24,5G Файловая система Linux
Диск /dev/sdb: 6,65 GiB, 7143669760 байт, 13952480 секторов
/dev/sdb1     2048  4196351 4194304     2G Файловая система Linux
/dev/sdb2  4196352 13952446 9756095   4,7G Файловая система Linux
Диск /dev/sdc: 6,65 GiB, 7143669760 байт, 13952480 секторов
/dev/sdc1     2048  6293503 6291456     3G Файловая система Linux
/dev/sdc2  6293504 13952446 7658943   3,7G Файловая система Linux
3. создаем каиталоги в каталоге /mnt от имени администратора и монтируем диски в эти каталоги, затем выдаём права пользователю(если выдать до монтирования, права сбросятся)
u04@u04-VirtualBox:~$ sudo su -
root@u04-VirtualBox:~# cd /mnt
root@u04-VirtualBox:/mnt# mkdir ext4, xfs, btrfs, ext2
root@u04-VirtualBox:/mnt# ls -l
итого 16
drwxr-xr-x 2 root root 4096 мая 16 13:05 btrfs,
drwxr-xr-x 2 root root 4096 мая 16 13:05 ext2
drwxr-xr-x 2 root root 4096 мая 16 13:05 ext4,
drwxr-xr-x 2 root root 4096 мая 16 13:05 xfs,
root@u04-VirtualBox:/mnt# rmdir btrfs, ext2 ext4, xfs,
root@u04-VirtualBox:/mnt# mkdir ext4 xfs btrfs ext2
root@u04-VirtualBox:/mnt# ls -l
итого 16
drwxr-xr-x 2 root root 4096 мая 16 13:06 btrfs
drwxr-xr-x 2 root root 4096 мая 16 13:06 ext2
drwxr-xr-x 2 root root 4096 мая 16 13:06 ext4
drwxr-xr-x 2 root root 4096 мая 16 13:06 xfs
root@u04-VirtualBox:/mnt# mount /dev/sdb1 ext4
root@u04-VirtualBox:/mnt# mount /dev/sdb2 xfs
root@u04-VirtualBox:/mnt# mount /dev/sdc1 btrfs
root@u04-VirtualBox:/mnt# mount /dev/sdc2 ext2
root@u04-VirtualBox:/mnt# sudo chown u04:u04 ext4 ext2 xfs btrfs
4.создаем в каталоге ext4  файл и записываем туда информацию.
u04@u04-VirtualBox:~$ cd /mnt/ext4
u04@u04-VirtualBox:/mnt/ext4$ touch 123
u04@u04-VirtualBox:/mnt/ext4$ ls
123  lost+found
u04@u04-VirtualBox:/mnt/ext4$ cat > 123
545454565
656565
6565
а я сделал
^C
u04@u04-VirtualBox:/mnt/ext4$ cat 123
545454565
656565
6565
а я сделал
u04@u04-VirtualBox:/mnt/ext4$ cat >> 123
heheheheheeh
^C
u04@u04-VirtualBox:/mnt/ext4$ cat 123
545454565
656565
6565
а я сделал
heheheheheeh
u04@u04-VirtualBox:/mnt/ext4$ sudo lsblk -f /dev/sdb1 >> 123
u04@u04-VirtualBox:/mnt/ext4$ cat 123
545454565
656565
6565
а я сделал
heheheheheeh
NAME FSTYPE FSVER LABEL UUID                                 FSAVAIL FSUSE% MOUNTPOINTS
sdb1 ext4   1.0         18e55789-1473-478e-8092-dc7c55d259c1    1,8G     0% /mnt/ext4
4. смотрим информацию об использованных дисках 
u04@u04-VirtualBox:/mnt/ext4$ df -h
Файл.система   Размер Использовано  Дост Использовано% Cмонтировано в
tmpfs            197M         1,6M  196M            1% /run
/dev/sda3         24G          14G  9,2G           60% /
tmpfs            985M            0  985M            0% /dev/shm
tmpfs            5,0M         4,0K  5,0M            1% /run/lock
/dev/sda2        512M         6,1M  506M            2% /boot/efi
tmpfs            197M         128K  197M            1% /run/user/1000
/dev/sdb1        2,0G          28K  1,8G            1% /mnt/ext4
/dev/sdb2        4,7G          66M  4,6G            2% /mnt/xfs
/dev/sdc1        3,0G         5,8M  2,5G            1% /mnt/btrfs
/dev/sdc2        3,6G          24K  3,5G            1% /mnt/ext2
u04@u04-VirtualBox:/mnt/ext4$ sudo du -h
16K	./lost+found
24K	.
u04@u04-VirtualBox:/mnt/ext4$ ^C
u04@u04-VirtualBox:/mnt/ext4$ cd ..
u04@u04-VirtualBox:/mnt$ ls
btrfs  ext2  ext4  xfs
u04@u04-VirtualBox:/mnt$ cd ext2
u04@u04-VirtualBox:/mnt/ext2$ sudo du -h
16K	./lost+found
20K	.
5. c помощоью утилиты debugfs работаем внутри диска и удаляем файл, затем возвращаем его 
u04@u04-VirtualBox:~$ sudo debugfs -w /dev/sdb1
debugfs 1.46.5 (30-Dec-2021)
debugfs:  rm 123 //удаление файла

debugfs:  ls //открыть список
debugfs:  lsdel //список недавно удаленных
debugfs:  undel <12> 321 //возвращение файла по его название и иноду
debugfs:  ls
debugfs:  q //выход из системы

6. обзор данных системы, создание инод журналов
u04@u04-VirtualBox:~$ sudo dumpe2fs /dev/sdb1
dumpe2fs 1.46.5 (30-Dec-2021)
Filesystem volume name:   <none>
Last mounted on:          /mnt/ext4
Filesystem UUID:          18e55789-1473-478e-8092-dc7c55d259c1
Filesystem magic number:  0xEF53
Filesystem revision #:    1 (dynamic)
Filesystem features:      has_journal ext_attr resize_inode dir_index filetype needs_recovery extent 64bit flex_bg sparse_super large_file huge_file dir_nlink extra_isize metadata_csum
Filesystem flags:         signed_directory_hash 
Default mount options:    user_xattr acl
Filesystem state:         clean
Errors behavior:          Continue
Filesystem OS type:       Linux
Inode count:              131072
Block count:              524288
Reserved block count:     26214
Overhead clusters:        26150
Free blocks:              498131
Free inodes:              131060
First block:              0
Block size:               4096
Fragment size:            4096
Group descriptor size:    64
Reserved GDT blocks:      255
Blocks per group:         32768
Fragments per group:      32768
Inodes per group:         8192
Inode blocks per group:   512
Flex block group size:    16
Filesystem created:       Fri May 16 12:49:49 2025
Last mount time:          Fri May 16 13:36:41 2025
Last write time:          Fri May 16 13:36:41 2025
Mount count:              2
Maximum mount count:      -1
Last checked:             Fri May 16 12:49:49 2025
Check interval:           0 (<none>)
Lifetime writes:          33 MB
Reserved blocks uid:      0 (user root)
Reserved blocks gid:      0 (group root)
First inode:              11
Inode size:	          256
Required extra isize:     32
Desired extra isize:      32
Journal inode:            8
Default directory hash:   half_md4
Directory Hash Seed:      03db2597-949f-44cd-a5c9-7cda358b4f3b
Journal backup:           inode blocks
Checksum type:            crc32c
Checksum:                 0x7890a74f
Journal features:         journal_64bit journal_checksum_v3
Total journal size:       64M
Total journal blocks:     16384
Max transaction length:   16384
Fast commit length:       0
Journal sequence:         0x0000000f
Journal start:            41
Journal checksum type:    crc32c
Journal checksum:         0x5b7466f5


Group 0: (Blocks 0-32767) csum 0x7003 [ITABLE_ZEROED]
  Primary superblock at 0, Group descriptors at 1-1
  Reserved GDT blocks at 2-256
  Block bitmap at 257 (+257), csum 0xab758be2
  Inode bitmap at 273 (+273), csum 0x11a2bb33
  Inode table at 289-800 (+289)
  24281 free blocks, 8180 free inodes, 2 directories, 8180 unused inodes
  Free blocks: 8487-32767
  Свободные inod'ы: 13-8192
Group 1: (Blocks 32768-65535) csum 0x9a3c [INODE_UNINIT, ITABLE_ZEROED]
  Backup superblock at 32768, Group descriptors at 32769-32769
  Reserved GDT blocks at 32770-33024
  Block bitmap at 258 (bg #0 + 258), csum 0x6535a7c6
  Inode bitmap at 274 (bg #0 + 274), csum 0x00000000
  Inode table at 801-1312 (bg #0 + 801)
  32510 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 33025-33279, 33281-65535
  Свободные inod'ы: 8193-16384
Group 2: (Blocks 65536-98303) csum 0xa004 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 259 (bg #0 + 259), csum 0x00000000
  Inode bitmap at 275 (bg #0 + 275), csum 0x00000000
  Inode table at 1313-1824 (bg #0 + 1313)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 65536-98303
  Свободные inod'ы: 16385-24576
Group 3: (Blocks 98304-131071) csum 0x3ede [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Backup superblock at 98304, Group descriptors at 98305-98305
  Reserved GDT blocks at 98306-98560
  Block bitmap at 260 (bg #0 + 260), csum 0x00000000
  Inode bitmap at 276 (bg #0 + 276), csum 0x00000000
  Inode table at 1825-2336 (bg #0 + 1825)
  32511 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 98561-131071
  Свободные inod'ы: 24577-32768
Group 4: (Blocks 131072-163839) csum 0x7fed [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 261 (bg #0 + 261), csum 0x00000000
  Inode bitmap at 277 (bg #0 + 277), csum 0x00000000
  Inode table at 2337-2848 (bg #0 + 2337)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 131072-163839
  Свободные inod'ы: 32769-40960
Group 5: (Blocks 163840-196607) csum 0xcc53 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Backup superblock at 163840, Group descriptors at 163841-163841
  Reserved GDT blocks at 163842-164096
  Block bitmap at 262 (bg #0 + 262), csum 0x00000000
  Inode bitmap at 278 (bg #0 + 278), csum 0x00000000
  Inode table at 2849-3360 (bg #0 + 2849)
  32511 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 164097-196607
  Свободные inod'ы: 40961-49152
Group 6: (Blocks 196608-229375) csum 0x354a [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 263 (bg #0 + 263), csum 0x00000000
  Inode bitmap at 279 (bg #0 + 279), csum 0x00000000
  Inode table at 3361-3872 (bg #0 + 3361)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 196608-229375
  Свободные inod'ы: 49153-57344
Group 7: (Blocks 229376-262143) csum 0xf158 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Backup superblock at 229376, Group descriptors at 229377-229377
  Reserved GDT blocks at 229378-229632
  Block bitmap at 264 (bg #0 + 264), csum 0x00000000
  Inode bitmap at 280 (bg #0 + 280), csum 0x00000000
  Inode table at 3873-4384 (bg #0 + 3873)
  32511 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 229633-262143
  Свободные inod'ы: 57345-65536
Group 8: (Blocks 262144-294911) csum 0xeaf8 [INODE_UNINIT, ITABLE_ZEROED]
  Block bitmap at 265 (bg #0 + 265), csum 0xe8043462
  Inode bitmap at 281 (bg #0 + 281), csum 0x00000000
  Inode table at 4385-4896 (bg #0 + 4385)
  16384 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 278528-294911
  Свободные inod'ы: 65537-73728
Group 9: (Blocks 294912-327679) csum 0x0570 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Backup superblock at 294912, Group descriptors at 294913-294913
  Reserved GDT blocks at 294914-295168
  Block bitmap at 266 (bg #0 + 266), csum 0x00000000
  Inode bitmap at 282 (bg #0 + 282), csum 0x00000000
  Inode table at 4897-5408 (bg #0 + 4897)
  32511 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 295169-327679
  Свободные inod'ы: 73729-81920
Group 10: (Blocks 327680-360447) csum 0xfc69 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 267 (bg #0 + 267), csum 0x00000000
  Inode bitmap at 283 (bg #0 + 283), csum 0x00000000
  Inode table at 5409-5920 (bg #0 + 5409)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 327680-360447
  Свободные inod'ы: 81921-90112
Group 11: (Blocks 360448-393215) csum 0x5994 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 268 (bg #0 + 268), csum 0x00000000
  Inode bitmap at 284 (bg #0 + 284), csum 0x00000000
  Inode table at 5921-6432 (bg #0 + 5921)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 360448-393215
  Свободные inod'ы: 90113-98304
Group 12: (Blocks 393216-425983) csum 0x2380 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 269 (bg #0 + 269), csum 0x00000000
  Inode bitmap at 285 (bg #0 + 285), csum 0x00000000
  Inode table at 6433-6944 (bg #0 + 6433)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 393216-425983
  Свободные inod'ы: 98305-106496
Group 13: (Blocks 425984-458751) csum 0xab19 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 270 (bg #0 + 270), csum 0x00000000
  Inode bitmap at 286 (bg #0 + 286), csum 0x00000000
  Inode table at 6945-7456 (bg #0 + 6945)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 425984-458751
  Свободные inod'ы: 106497-114688
Group 14: (Blocks 458752-491519) csum 0x6927 [INODE_UNINIT, BLOCK_UNINIT, ITABLE_ZEROED]
  Block bitmap at 271 (bg #0 + 271), csum 0x00000000
  Inode bitmap at 287 (bg #0 + 287), csum 0x00000000
  Inode table at 7457-7968 (bg #0 + 7457)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 458752-491519
  Свободные inod'ы: 114689-122880
Group 15: (Blocks 491520-524287) csum 0x3eb0 [INODE_UNINIT, ITABLE_ZEROED]
  Block bitmap at 272 (bg #0 + 272), csum 0x07f3537b
  Inode bitmap at 288 (bg #0 + 288), csum 0x00000000
  Inode table at 7969-8480 (bg #0 + 7969)
  32768 free blocks, 8192 free inodes, 0 directories, 8192 unused inodes
  Free blocks: 491520-524287
  Свободные inod'ы: 122881-131072
u04@u04-VirtualBox:~$ sudo tune2fs -O has_journal /dev/sdc2
tune2fs 1.46.5 (30-Dec-2021)
Создание inod'а журнала: готово
u04@u04-VirtualBox:~$ sudo dumpe2fs /dev/sdc2
dumpe2fs 1.46.5 (30-Dec-2021)
Filesystem volume name:   <none>
Last mounted on:          /mnt/ext2
Filesystem UUID:          39b86510-8cf0-4684-bc0b-fa8d4c2be945
Filesystem magic number:  0xEF53
Filesystem revision #:    1 (dynamic)
Filesystem features:      has_journal ext_attr resize_inode dir_index filetype sparse_super large_file
Filesystem flags:         signed_directory_hash 
Default mount options:    user_xattr acl
Filesystem state:         not clean
Errors behavior:          Continue
Filesystem OS type:       Linux
Inode count:              239520
Block count:              957367
Reserved block count:     47868
Overhead clusters:        33294
Free blocks:              940451
Free inodes:              239509
First block:              0
Block size:               4096
Fragment size:            4096
Reserved GDT blocks:      233
Blocks per group:         32768
Fragments per group:      32768
Inodes per group:         7984
Inode blocks per group:   499
Filesystem created:       Fri May 16 12:59:15 2025
Last mount time:          Fri May 16 13:22:44 2025
Last write time:          Fri May 16 13:38:49 2025
Mount count:              2
Maximum mount count:      -1
Last checked:             Fri May 16 12:59:15 2025
Check interval:           0 (<none>)
Lifetime writes:          20 kB
Reserved blocks uid:      0 (user root)
Reserved blocks gid:      0 (group root)
First inode:              11
Inode size:	          256
Required extra isize:     32
Desired extra isize:      32
Journal inode:            12
Default directory hash:   half_md4
Directory Hash Seed:      8ee5d601-2e62-472f-97aa-c5a9d3858079
Journal features:         (none)
Total journal size:       64M
Total journal blocks:     16384
Max transaction length:   16384
Fast commit length:       0
Journal sequence:         0x00000001
Journal start:            0


Group 0: (Blocks 0-32767)
  Primary superblock at 0, Group descriptors at 1-1
  Reserved GDT blocks at 2-234
  Block bitmap at 235 (+235)
  Inode bitmap at 236 (+236)
  Inode table at 237-735 (+237)
  15625 free blocks, 7972 free inodes, 2 directories
  Free blocks: 759-783, 832-863, 928-1023, 1040-1535, 1664-1791, 2560-3071, 18432-32767
  Свободные inod'ы: 13-7984
Group 1: (Blocks 32768-65535)
  Backup superblock at 32768, Group descriptors at 32769-32769
  Reserved GDT blocks at 32770-33002
  Block bitmap at 33003 (+235)
  Inode bitmap at 33004 (+236)
  Inode table at 33005-33503 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 33504-65535
  Свободные inod'ы: 7985-15968
Group 2: (Blocks 65536-98303)
  Block bitmap at 65536 (+0)
  Inode bitmap at 65537 (+1)
  Inode table at 65538-66036 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 66037-98303
  Свободные inod'ы: 15969-23952
Group 3: (Blocks 98304-131071)
  Backup superblock at 98304, Group descriptors at 98305-98305
  Reserved GDT blocks at 98306-98538
  Block bitmap at 98539 (+235)
  Inode bitmap at 98540 (+236)
  Inode table at 98541-99039 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 99040-131071
  Свободные inod'ы: 23953-31936
Group 4: (Blocks 131072-163839)
  Block bitmap at 131072 (+0)
  Inode bitmap at 131073 (+1)
  Inode table at 131074-131572 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 131573-163839
  Свободные inod'ы: 31937-39920
Group 5: (Blocks 163840-196607)
  Backup superblock at 163840, Group descriptors at 163841-163841
  Reserved GDT blocks at 163842-164074
  Block bitmap at 164075 (+235)
  Inode bitmap at 164076 (+236)
  Inode table at 164077-164575 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 164576-196607
  Свободные inod'ы: 39921-47904
Group 6: (Blocks 196608-229375)
  Block bitmap at 196608 (+0)
  Inode bitmap at 196609 (+1)
  Inode table at 196610-197108 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 197109-229375
  Свободные inod'ы: 47905-55888
Group 7: (Blocks 229376-262143)
  Backup superblock at 229376, Group descriptors at 229377-229377
  Reserved GDT blocks at 229378-229610
  Block bitmap at 229611 (+235)
  Inode bitmap at 229612 (+236)
  Inode table at 229613-230111 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 230112-262143
  Свободные inod'ы: 55889-63872
Group 8: (Blocks 262144-294911)
  Block bitmap at 262144 (+0)
  Inode bitmap at 262145 (+1)
  Inode table at 262146-262644 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 262645-294911
  Свободные inod'ы: 63873-71856
Group 9: (Blocks 294912-327679)
  Backup superblock at 294912, Group descriptors at 294913-294913
  Reserved GDT blocks at 294914-295146
  Block bitmap at 295147 (+235)
  Inode bitmap at 295148 (+236)
  Inode table at 295149-295647 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 295648-327679
  Свободные inod'ы: 71857-79840
Group 10: (Blocks 327680-360447)
  Block bitmap at 327680 (+0)
  Inode bitmap at 327681 (+1)
  Inode table at 327682-328180 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 328181-360447
  Свободные inod'ы: 79841-87824
Group 11: (Blocks 360448-393215)
  Block bitmap at 360448 (+0)
  Inode bitmap at 360449 (+1)
  Inode table at 360450-360948 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 360949-393215
  Свободные inod'ы: 87825-95808
Group 12: (Blocks 393216-425983)
  Block bitmap at 393216 (+0)
  Inode bitmap at 393217 (+1)
  Inode table at 393218-393716 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 393717-425983
  Свободные inod'ы: 95809-103792
Group 13: (Blocks 425984-458751)
  Block bitmap at 425984 (+0)
  Inode bitmap at 425985 (+1)
  Inode table at 425986-426484 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 426485-458751
  Свободные inod'ы: 103793-111776
Group 14: (Blocks 458752-491519)
  Block bitmap at 458752 (+0)
  Inode bitmap at 458753 (+1)
  Inode table at 458754-459252 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 459253-491519
  Свободные inod'ы: 111777-119760
Group 15: (Blocks 491520-524287)
  Block bitmap at 491520 (+0)
  Inode bitmap at 491521 (+1)
  Inode table at 491522-492020 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 492021-524287
  Свободные inod'ы: 119761-127744
Group 16: (Blocks 524288-557055)
  Block bitmap at 524288 (+0)
  Inode bitmap at 524289 (+1)
  Inode table at 524290-524788 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 524789-557055
  Свободные inod'ы: 127745-135728
Group 17: (Blocks 557056-589823)
  Block bitmap at 557056 (+0)
  Inode bitmap at 557057 (+1)
  Inode table at 557058-557556 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 557557-589823
  Свободные inod'ы: 135729-143712
Group 18: (Blocks 589824-622591)
  Block bitmap at 589824 (+0)
  Inode bitmap at 589825 (+1)
  Inode table at 589826-590324 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 590325-622591
  Свободные inod'ы: 143713-151696
Group 19: (Blocks 622592-655359)
  Block bitmap at 622592 (+0)
  Inode bitmap at 622593 (+1)
  Inode table at 622594-623092 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 623093-655359
  Свободные inod'ы: 151697-159680
Group 20: (Blocks 655360-688127)
  Block bitmap at 655360 (+0)
  Inode bitmap at 655361 (+1)
  Inode table at 655362-655860 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 655861-688127
  Свободные inod'ы: 159681-167664
Group 21: (Blocks 688128-720895)
  Block bitmap at 688128 (+0)
  Inode bitmap at 688129 (+1)
  Inode table at 688130-688628 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 688629-720895
  Свободные inod'ы: 167665-175648
Group 22: (Blocks 720896-753663)
  Block bitmap at 720896 (+0)
  Inode bitmap at 720897 (+1)
  Inode table at 720898-721396 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 721397-753663
  Свободные inod'ы: 175649-183632
Group 23: (Blocks 753664-786431)
  Block bitmap at 753664 (+0)
  Inode bitmap at 753665 (+1)
  Inode table at 753666-754164 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 754165-786431
  Свободные inod'ы: 183633-191616
Group 24: (Blocks 786432-819199)
  Block bitmap at 786432 (+0)
  Inode bitmap at 786433 (+1)
  Inode table at 786434-786932 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 786933-819199
  Свободные inod'ы: 191617-199600
Group 25: (Blocks 819200-851967)
  Backup superblock at 819200, Group descriptors at 819201-819201
  Reserved GDT blocks at 819202-819434
  Block bitmap at 819435 (+235)
  Inode bitmap at 819436 (+236)
  Inode table at 819437-819935 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 819936-851967
  Свободные inod'ы: 199601-207584
Group 26: (Blocks 851968-884735)
  Block bitmap at 851968 (+0)
  Inode bitmap at 851969 (+1)
  Inode table at 851970-852468 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 852469-884735
  Свободные inod'ы: 207585-215568
Group 27: (Blocks 884736-917503)
  Backup superblock at 884736, Group descriptors at 884737-884737
  Reserved GDT blocks at 884738-884970
  Block bitmap at 884971 (+235)
  Inode bitmap at 884972 (+236)
  Inode table at 884973-885471 (+237)
  32032 free blocks, 7984 free inodes, 0 directories
  Free blocks: 885472-917503
  Свободные inod'ы: 215569-223552
Group 28: (Blocks 917504-950271)
  Block bitmap at 917504 (+0)
  Inode bitmap at 917505 (+1)
  Inode table at 917506-918004 (+2)
  32267 free blocks, 7984 free inodes, 0 directories
  Free blocks: 918005-950271
  Свободные inod'ы: 223553-231536
Group 29: (Blocks 950272-957366)
  Block bitmap at 950272 (+0)
  Inode bitmap at 950273 (+1)
  Inode table at 950274-950772 (+2)
  6594 free blocks, 7984 free inodes, 0 directories
  Free blocks: 950773-957366
  Свободные inod'ы: 231537-239520
7. восстановление поврежденных данных xfs, получение информации о файловой системе (xfs_db - восстановление файловой системы вручную)
u04@u04-VirtualBox:~$ sudo umount /mnt/xfs
u04@u04-VirtualBox:~$ sudo xfs_repair /dev/sdb2
Phase 1 - find and verify superblock...
Фаза 2 - использование внутреннего журнала
        - zero log...
        - scan filesystem freespace and inode maps...
        - found root inode chunk
Phase 3 - for each AG...
        - scan and clear agi unlinked lists...
        - process known inodes and perform inode discovery...
        - agno = 0
        - agno = 1
        - agno = 2
        - agno = 3
        - process newly discovered inodes...
Фаза 4 - поиск повторяющихся блоков...
        - setting up duplicate extent list...
        - check for inodes claiming duplicate blocks...
        - agno = 0
        - agno = 1
        - agno = 2
        - agno = 3
Phase 5 - rebuild AG headers and trees...
        - reset superblock...
Phase 6 - check inode connectivity...
        - resetting contents of realtime bitmap and summary inodes
        - traversing filesystem ...
        - traversal finished ...
        - moving disconnected inodes to lost+found ...
Phase 7 - verify and correct link counts...
done

u04@u04-VirtualBox:~$ sudo xfs_info /dev/sdb2
meta-data=/dev/sdb2              isize=512    agcount=4, agsize=304878 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=1, sparse=1, rmapbt=0
         =                       reflink=1    bigtime=0 inobtcount=0
data     =                       bsize=4096   blocks=1219511, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
log      =internal log           bsize=4096   blocks=2560, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
8. Проверка файловой системы btrfs
u04@u04-VirtualBox:~$ sudo btrfs scrub start -Bd /dev/sdc1

Scrub device /dev/sdc1 (id 1) done
Scrub started:    Fri May 16 13:47:07 2025
Status:           finished
Duration:         0:00:00
Total to scrub:   536.00MiB
Rate:             0.00B/s
Error summary:    no errors found
u04@u04-VirtualBox:~$ sudo btrfs check --progress /dev/sdc1
Opening filesystem to check...
Checking filesystem on /dev/sdc1
UUID: 735a48f0-bc23-4cc6-bbff-3871f648072e
[1/7] checking root items                      (0:00:00 elapsed, 13 items check[1/7] checking root items                      (0:00:00 elapsed, 13 items checked)
[2/7] checking extents                         (0:00:00 elapsed, 16 items check[2/7] checking extents                         (0:00:00 elapsed, 18 items checked)
[3/7] checking free space tree                 (0:00:00 elapsed, 4 items checke[3/7] checking free space tree                 (0:00:00 elapsed, 4 items checked)
[4/7] checking fs roots                        (0:00:00 elapsed, 2 items checke[4/7] checking fs roots                        (0:00:00 elapsed, 2 items checked)
[5/7] checking csums (without verifying data)  (0:00:00 elapsed, 1 items checke[5/7] checking csums (without verifying data)  (0:00:00 elapsed, 1 items checked)
[6/7] checking root refs                       (0:00:00 elapsed, 3 items checke[6/7] checking root refs                       (0:00:00 elapsed, 3 items checked)
[7/7] checking quota groups skipped (not enabled on this FS)
found 147456 bytes used, no error found
total csum bytes: 0
total tree bytes: 147456
total fs tree bytes: 32768
total extent tree bytes: 16384
btree space waste bytes: 139915
file data blocks allocated: 0
 referenced 0
u04@u04-VirtualBox:~$ sudo btrfs filesystem df /mnt/btrfs
Data, single: total=8.00MiB, used=0.00B
System, DUP: total=32.00MiB, used=16.00KiB
Metadata, DUP: total=256.00MiB, used=128.00KiB
GlobalReserve, single: total=5.50MiB, used=0.00B
u04@u04-VirtualBox:~$ sudo btrfs system show /dev/sdc1
btrfs: unknown token 'system'
usage: btrfs [--help] [--version] [--format <format>] [-v|--verbose] [-q|--quiet] <group> [<group>...] <command> [<args>]

    btrfs balance start [options] <path>
        Balance chunks across the devices
    btrfs balance pause <path>
        Pause running balance
    btrfs balance cancel <path>
        Cancel running or paused balance
    btrfs balance resume <path>
        Resume interrupted balance
    btrfs balance status [-v] <path>
        Show status of running or paused balance

    btrfs check [options] <device>
        Check structural integrity of a filesystem (unmounted).

    btrfs device add [options] <device> [<device>...] <path>
        Add one or more devices to a mounted filesystem.
    btrfs device delete <device>|<devid> [<device>|<devid>...] <path>
    btrfs device remove <device>|<devid> [<device>|<devid>...] <path>
        Remove a device from a filesystem
    btrfs device scan [-d|--all-devices] <device> [<device>...]
    btrfs device scan -u|--forget [<device>...]
        Scan or forget (unregister) devices of btrfs filesystems
    btrfs device ready <device>
        Check and wait until a group of devices of a filesystem is ready for mount
    btrfs device stats [options] <path>|<device>
        Show device IO error statistics
    btrfs device usage [options] <path> [<path>..]
        Show detailed information about internal allocations in devices.

    btrfs filesystem df [options] <path>
        Show space usage information for a mount point
    btrfs filesystem du [options] <path> [<path>..]
        Summarize disk usage of each file.
    btrfs filesystem show [options] [<path>|<uuid>|<device>|label]
        Show the structure of a filesystem
    btrfs filesystem sync <path>
        Force a sync on a filesystem
    btrfs filesystem defragment [options] <file>|<dir> [<file>|<dir>...]
        Defragment a file or a directory
    btrfs filesystem resize [options] [devid:][+/-]<newsize>[kKmMgGtTpPeE]|[devid:]max <path>
        Resize a filesystem
    btrfs filesystem label [<device>|<mount_point>] [<newlabel>]
        Get or change the label of a filesystem
    btrfs filesystem usage [options] <path> [<path>..]
        Show detailed information about internal filesystem usage .

    btrfs inspect-internal inode-resolve [-v] <inode> <path>
        Get file system paths for the given inode
    btrfs inspect-internal logical-resolve [-Pvo] [-s bufsize] <logical> <path>
        Get file system paths for the given logical address
    btrfs inspect-internal subvolid-resolve <subvolid> <path>
        Get file system paths for the given subvolume ID.
    btrfs inspect-internal rootid <path>
        Get tree ID of the containing subvolume of path.
    btrfs inspect-internal min-dev-size [options] <path>
        Get the minimum size the device can be shrunk to
    btrfs inspect-internal dump-tree [options] <device> [<device> ..]
        Dump tree structures from a given device
    btrfs inspect-internal dump-super [options] device [device...]
        Dump superblock from a device in a textual form
    btrfs inspect-internal tree-stats [options] <device>
        Print various stats for trees

    btrfs property get [-t <type>] <object> [<name>]
        Get a property value of a btrfs object
    btrfs property set [-f] [-t <type>] <object> <name> <value>
        Set a property on a btrfs object
    btrfs property list [-t <type>] <object>
        Lists available properties with their descriptions for the given object

    btrfs qgroup assign [options] <src> <dst> <path>
        Assign SRC as the child qgroup of DST
    btrfs qgroup remove [options] <src> <dst> <path>
        Remove a child qgroup SRC from DST.
    btrfs qgroup create <qgroupid> <path>
        Create a subvolume quota group.
    btrfs qgroup destroy <qgroupid> <path>
        Destroy a quota group.
    btrfs qgroup show [options] <path>
        Show subvolume quota groups.
    btrfs qgroup limit [options] <size>|none [<qgroupid>] <path>
        Set the limits a subvolume quota group.

    btrfs quota enable <path>
        Enable subvolume quota support for a filesystem.
    btrfs quota disable <path>
        Disable subvolume quota support for a filesystem.
    btrfs quota rescan [-sw] <path>
        Trash all qgroup numbers and scan the metadata again with the current config.

    btrfs receive [options] <mount>
    btrfs receive --dump [options]
        Receive subvolumes from a stream

    btrfs replace start [-Bfr] <srcdev>|<devid> <targetdev> <mount_point>
        Replace device of a btrfs filesystem.
    btrfs replace status [-1] <mount_point>
        Print status and progress information of a running device replace operation
    btrfs replace cancel <mount_point>
        Cancel a running device replace operation.

    btrfs rescue chunk-recover [options] <device>
        Recover the chunk tree by scanning the devices one by one.
    btrfs rescue super-recover [options] <device>
        Recover bad superblocks from good copies
    btrfs rescue zero-log <device>
        Clear the tree log. Usable if it's corrupted and prevents mount.
    btrfs rescue fix-device-size <device>
        Re-align device and super block sizes. Usable if newer kernel refuse to mount it due to mismatch super size
    btrfs rescue create-control-device
        Create /dev/btrfs-control (see 'CONTROL DEVICE' in btrfs(5))
    btrfs rescue clear-uuid-tree
        Delete uuid tree so that kernel can rebuild it at mount time

    btrfs restore [options] <device> <path>
    btrfs restore [options] -l <device>
        Try to restore files from a damaged filesystem (unmounted)

    btrfs scrub start [-BdqrRf] [-c ioprio_class -n ioprio_classdata] <path>|<device>
        Start a new scrub. If a scrub is already running, the new one fails.
    btrfs scrub cancel <path>|<device>
        Cancel a running scrub
    btrfs scrub resume [-BdqrR] [-c ioprio_class -n ioprio_classdata] <path>|<device>
        Resume previously canceled or interrupted scrub
    btrfs scrub status [-dR] <path>|<device>
        Show status of running or finished scrub

    btrfs send [-ve] [-p <parent>] [-c <clone-src>] [-f <outfile>] <subvol> [<subvol>...]
        Send the subvolume(s) to stdout.

    btrfs subvolume create [-i <qgroupid>] [<dest>/]<name>
        Create a subvolume
    btrfs subvolume delete [options] <subvolume> [<subvolume>...]
    btrfs subvolume delete [options] -i|--subvolid <subvolid> <path>
        Delete subvolume(s)
    btrfs subvolume list [options] <path>
        List subvolumes and snapshots in the filesystem.
    btrfs subvolume snapshot [-r] [-i <qgroupid>] <subvolume> { <subdir>/<name> | <subdir> }
        
    btrfs subvolume get-default <path>
        Get the default subvolume of a filesystem
    btrfs subvolume set-default <subvolume>
    btrfs subvolume set-default <subvolid> <path>
        Set the default subvolume of the filesystem mounted as default.
    btrfs subvolume find-new <path> <lastgen>
        List the recently modified files in a filesystem
    btrfs subvolume show [options] <path>
        Show more information about the subvolume (UUIDs, generations, times, snapshots)
    btrfs subvolume sync <path> [<subvol-id>...]
        Wait until given subvolume(s) are completely removed from the filesystem.

    btrfs help [--full] [--box]
        Display help information
    btrfs version
        Display btrfs-progs version

Use --help as an argument for information on a specific group or command.


9.04@u04-VirtualBox:~$ lsblk -f /dev/sdb1
NAME FSTYPE FSVER LABEL UUID                                 FSAVAIL FSUSE% MOUNTPOINTS
sdb1 ext4   1.0         18e55789-1473-478e-8092-dc7c55d259c1    1,8G     0% /mnt/ext4
u04@u04-VirtualBox:~$ sudo nano /etc/fstab
u04@u04-VirtualBox:~$ sudo mount -af
u04@u04-VirtualBox:~$ sudo mount -a
u04@u04-VirtualBox:~$ ls /mnt/ext4
321  lost+found
(делаем так со всеми дисками и на сервере)



